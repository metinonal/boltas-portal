<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Kontrol Paneli</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="A fully featured admin theme which can be used to build CRM, CMS, etc." name="description">
    <meta content="Coderthemes" name="author">

    <%- include("partials/css") %>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <!-- Added CKEditor 5 CDN -->
    <script src="https://cdn.ckeditor.com/ckeditor5/40.0.0/classic/ckeditor.js"></script>

</head>

<body class="loading" data-layout-color="light" data-leftbar-theme="dark" data-layout-mode="fluid"
    data-rightbar-onstart="true">
    <!-- Begin page -->
    <div class="wrapper">
        <!-- ========== Left Sidebar Start ========== -->
        <div class="leftside-menu">

            <!-- LOGO -->
            <%- include("partials/logo") %>

            <div class="h-100" id="leftside-menu-container" data-simplebar="">

                <!--- Sidemenu -->
                <%- include("partials/sidemenu") %>
                <!-- End Sidebar -->

                <div class="clearfix"></div>

            </div>
            <!-- Sidebar -left -->

        </div>
        <!-- Left Sidebar End -->

        <!-- ============================================================== -->
        <!-- Start Page Content here -->
        <!-- ============================================================== -->

        <div class="content-page">
            <div class="content">

                <!-- Topbar Start -->
                <%- include("partials/topbar") %>
                <!-- end Topbar -->

                <!-- Start Content-->
                <div class="container-fluid">

                    <!-- start page title -->
                    <div class="row">
                        <div class="col-12">
                            <div class="page-title-box">
                                <div class="page-title-right">
                                    <ol class="breadcrumb m-0">
                                        <li class="breadcrumb-item"><a href="/ikyonetim">Ana Sayfa</a></li>
                                        <li class="breadcrumb-item"><a href="/ikyonetim/sozluk">Sözlük</a></li>
                                        <li class="breadcrumb-item active">Yeni Kelime</li>
                                    </ol>
                                </div>
                                <h4 class="page-title">Yeni Kelime Ekle</h4>
                            </div>
                        </div>
                    </div>
                    <!-- end page title -->

                    <div class="row">
                        <div class="col-lg-8">
                            <div class="card">
                                <div class="card-body">
                                    <h4 class="header-title mb-3">Kelime Bilgileri</h4>

                                    <div id="alertContainer"></div>

                                    <!-- Updated form to support file upload -->
                                    <form id="addSozlukForm" enctype="multipart/form-data">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label for="kelime" class="form-label">Kelime <span class="text-danger">*</span></label>
                                                    <input type="text" class="form-control" id="kelime" name="kelime" required>
                                                    <small class="form-text text-muted">Sözlüğe eklenecek kelimeyi girin</small>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label for="kategori" class="form-label">Kategori</label>
                                                    <input type="text" class="form-control" id="kategori" name="kategori" value="Genel">
                                                    <small class="form-text text-muted">Kelime kategorisi (opsiyonel)</small>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="mb-3">
                                            <label for="anlam" class="form-label">Anlam <span class="text-danger">*</span></label>
                                            <!-- Changed textarea to div for CKEditor -->
                                            <div id="anlam" name="anlam"></div>
                                            <small class="form-text text-muted">Kelimenin anlamını detaylı olarak açıklayın. Resim ekleyebilir, yazı tipini değiştirebilirsiniz.</small>
                                        </div>

                                        <div class="text-end">
                                            <button type="submit" class="btn btn-success" id="submitBtn">
                                                <i class="mdi mdi-content-save"></i> Kelime Ekle
                                            </button>
                                            <a href="/ikyonetim/sozluk" class="btn btn-light ms-1">İptal</a>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="card">
                                <div class="card-body">
                                    <h4 class="header-title mb-3">Bilgilendirme</h4>
                                    
                                    <div class="alert alert-info" role="alert">
                                        <h4 class="alert-heading">Dikkat Edilecekler</h4>
                                        <ul class="mb-0">
                                            <li>Kelime alanı zorunludur</li>
                                            <li>Anlam alanı zorunludur</li>
                                            <li>Aynı kelime tekrar eklenemez</li>
                                            <li>Harf otomatik olarak belirlenir</li>
                                            <li>Kategori belirtilmezse "Genel" olarak kaydedilir</li>
                                            <!-- Added image upload info -->
                                            <li>Resim eklenmesi opsiyoneldir</li>
                                            <li>Sadece JPG, PNG, GIF formatları desteklenir</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- end row -->

                </div>
                <!-- container -->

            </div>
            <!-- content -->

            <!-- Footer Start -->
            <%- include("partials/footer") %>
            <!-- end Footer -->

        </div>

        <!-- ============================================================== -->
        <!-- End Page content -->
        <!-- ============================================================== -->


    </div>
    <!-- END wrapper -->

    <%- include("partials/scripts") %>
    <script>
        let editorInstance;
        
        class MyUploadAdapter {
            constructor(loader) {
                this.loader = loader;
            }

            upload() {
                return this.loader.file
                    .then(file => new Promise((resolve, reject) => {
                        this._initRequest();
                        this._initListeners(resolve, reject, file);
                        this._sendRequest(file);
                    }));
            }

            abort() {
                if (this.xhr) {
                    this.xhr.abort();
                }
            }

            _initRequest() {
                const xhr = this.xhr = new XMLHttpRequest();
                xhr.open('POST', '/ikyonetim/sozluk/upload-image', true);
                xhr.responseType = 'json';
            }

            _initListeners(resolve, reject, file) {
                const xhr = this.xhr;
                const loader = this.loader;
                const genericErrorText = `Couldn't upload file: ${file.name}.`;

                xhr.addEventListener('error', () => reject(genericErrorText));
                xhr.addEventListener('abort', () => reject());
                xhr.addEventListener('load', () => {
                    const response = xhr.response;

                    if (!response || xhr.status !== 200) {
                        return reject(response && response.message ? response.message : genericErrorText);
                    }

                    if (!response.url) {
                        return reject(response.message || genericErrorText);
                    }

                    resolve({
                        default: response.url
                    });
                });

                if (xhr.upload) {
                    xhr.upload.addEventListener('progress', evt => {
                        if (evt.lengthComputable) {
                            loader.uploadTotal = evt.total;
                            loader.uploaded = evt.loaded;
                        }
                    });
                }
            }

            _sendRequest(file) {
                const data = new FormData();
                data.append('upload', file);
                this.xhr.send(data);
            }
        }

        function MyCustomUploadAdapterPlugin(editor) {
            editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {
                return new MyUploadAdapter(loader);
            };
        }
        
        $(document).ready(function() {
            ClassicEditor
                .create(document.querySelector('#anlam'), {
                    extraPlugins: [MyCustomUploadAdapterPlugin],
                    toolbar: [
                        'heading', '|',
                        'bold', 'italic', 'underline', 'strikethrough', '|',
                        'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', '|',
                        'bulletedList', 'numberedList', '|',
                        'outdent', 'indent', '|',
                        'alignment', '|',
                        'link', 'imageUpload', 'insertTable', '|',
                        'undo', 'redo'
                    ],
                    image: {
                        resizeUnit: 'px',
                        resizeOptions: [
                            {
                                name: 'resizeImage:original',
                                value: null,
                                label: 'Orijinal'
                            },
                            {
                                name: 'resizeImage:25',
                                value: '25',
                                label: '%25'
                            },
                            {
                                name: 'resizeImage:50',
                                value: '50',
                                label: '%50'
                            },
                            {
                                name: 'resizeImage:75',
                                value: '75',
                                label: '%75'
                            }
                        ],
                        toolbar: [
                            'imageTextAlternative', '|',
                            'imageStyle:inline', 'imageStyle:wrapText', 'imageStyle:breakText', '|',
                            'resizeImage'
                        ]
                    },
                    table: {
                        contentToolbar: [
                            'tableColumn', 'tableRow', 'mergeTableCells'
                        ]
                    },
                    language: 'tr'
                })
                .then(editor => {
                    editorInstance = editor;
                    // Set minimum height
                    editor.editing.view.change(writer => {
                        writer.setStyle('min-height', '200px', editor.editing.view.document.getRoot());
                    });
                })
                .catch(error => {
                    console.error('CKEditor initialization error:', error);
                });

            // Alert gösterme fonksiyonu
            function showAlert(type, message) {
                const alertHtml = `
                    <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                `;
                $('#alertContainer').html(alertHtml);
                
                // 3 saniye sonra otomatik kapat
                setTimeout(function() {
                    $('.alert').fadeOut();
                }, 3000);
            }

            $('#addSozlukForm').on('submit', function(e) {
                e.preventDefault();
                
                const anlamContent = editorInstance.getData();
                
                const formData = new FormData();
                formData.append('kelime', $('#kelime').val().trim());
                formData.append('anlam', anlamContent);
                formData.append('kategori', $('#kategori').val().trim());

                // Validation
                if (!$('#kelime').val().trim() || !anlamContent.trim()) {
                    showAlert('danger', 'Kelime ve anlam alanları zorunludur!');
                    return;
                }

                // Button loading state
                const submitBtn = $('#submitBtn');
                const originalText = submitBtn.html();
                submitBtn.html('<i class="mdi mdi-loading mdi-spin"></i> Kaydediliyor...').prop('disabled', true);

                // Submit
                $.ajax({
                    url: '/ikyonetim/sozluk/add',
                    method: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', response.message);
                            setTimeout(function() {
                                window.location.href = '/ikyonetim/sozluk';
                            }, 1500);
                        } else {
                            showAlert('danger', response.message);
                            submitBtn.html(originalText).prop('disabled', false);
                        }
                    },
                    error: function(xhr) {
                        console.error('AJAX Error:', xhr);
                        const response = xhr.responseJSON;
                        const errorMessage = response ? response.message : 'Bir hata oluştu!';
                        showAlert('danger', errorMessage);
                        submitBtn.html(originalText).prop('disabled', false);
                    }
                });
            });
        });
    </script>

</body>

</html>
