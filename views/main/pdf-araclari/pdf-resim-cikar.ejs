<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="utf-8">
    <title>PDF'ten Resim Çıkar | Boltas Portal</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="A fully featured admin theme which can be used to build CRM, CMS, etc." name="description">
    <meta content="Coderthemes" name="author">

    <%- include("../partials/css") %>

    <style>
        .upload-area {
            border: 2px dashed #dee2e6;
            border-radius: 10px;
            padding: 3rem;
            text-align: center;
            transition: all 0.3s ease;
            cursor: pointer;
        }
        .upload-area:hover {
            border-color: #007bff;
            background-color: #f8f9fa;
        }
        .upload-area.dragover {
            border-color: #007bff;
            background-color: #e3f2fd;
        }
        .progress-container {
            display: none;
        }
        .file-info {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 15px;
            margin: 15px 0;
            border: 1px solid #dee2e6;
        }
        .images-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        .image-item {
            background: white;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            transition: all 0.3s ease;
        }
        .image-item:hover {
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            transform: translateY(-2px);
        }
        .image-preview {
            max-width: 100%;
            max-height: 150px;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin-bottom: 10px;
        }
        .btn-extract {
            background: linear-gradient(45deg, #28a745, #20c997);
            border: none;
            color: white;
            font-weight: 600;
            padding: 12px 30px;
            font-size: 16px;
        }
        .btn-extract:hover {
            background: linear-gradient(45deg, #218838, #1ea085);
            color: white;
            transform: translateY(-1px);
        }
        .btn-extract:disabled {
            background: #6c757d;
            cursor: not-allowed;
            transform: none;
        }
    </style>

</head>

<body class="loading" data-layout-color="light" data-layout="topnav" data-layout-mode="fluid" data-rightbar-onstart="true">
    <!-- Begin page -->
    <div class="wrapper">

        <!-- ============================================================== -->
        <!-- Start Page Content here -->
        <!-- ============================================================== -->

        <div class="content-page">
            <div class="content">
                <!-- Topbar Start -->
                <%- include("../partials/topbar") %>
                <!-- end Topbar -->

                <%- include("../partials/topnav") %>

                <div class="container-fluid px-4">
                    <div class="row">
                        <div class="col-12">
                            <div class="card border-0 shadow-sm mt-4">
                                <div class="card-header bg-gradient-success">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h4 class="mb-0">
                                                <i class="fas fa-images me-2"></i>
                                                PDF'ten Resim Çıkar
                                            </h4>
                                            <p class="mb-0 mt-2">PDF dosyanızdaki tüm resimleri çıkarın ve indirin</p>
                                        </div>
                                        <a href="/pdf-araclari" class="btn btn-light">
                                            <i class="fas fa-arrow-left me-1"></i>
                                            Geri Dön
                                        </a>
                                    </div>
                                </div>
                                <div class="card-body p-4">
                                    
                                    <!-- Upload Area -->
                                    <div class="upload-area mb-4" id="uploadArea">
                                        <div class="upload-content">
                                            <i class="fas fa-cloud-upload-alt fa-3x text-primary mb-3"></i>
                                            <h5>PDF Dosyasını Buraya Sürükleyin</h5>
                                            <p class="text-muted mb-3">veya dosya seçmek için tıklayın</p>
                                            <button type="button" class="btn btn-primary" id="selectFiles">
                                                <i class="fas fa-folder-open me-1"></i>
                                                Dosya Seç
                                            </button>
                                            <input type="file" id="fileInput" accept=".pdf" style="display: none;">
                                            <p class="text-muted mt-2 mb-0">
                                                <small>Maksimum dosya boyutu: 50MB</small>
                                            </p>
                                        </div>
                                    </div>

                                    <!-- Progress -->
                                    <div class="progress-container mt-4" id="progressContainer">
                                        <div class="text-center mb-3">
                                            <h5 id="progressText">PDF işleniyor...</h5>
                                            <p class="mb-0" id="progressDetail">Resimler aranıyor...</p>
                                        </div>
                                        <div class="progress" style="height: 15px;">
                                            <div class="progress-bar progress-bar-striped progress-bar-animated bg-primary" 
                                                 id="progressBar" role="progressbar" style="width: 0%"></div>
                                        </div>
                                    </div>

                                    <!-- PDF Info -->
                                    <div id="pdfInfo" style="display: none;">
                                        <div class="d-flex justify-content-between align-items-center mb-3">
                                            <h5 class="mb-0">
                                                <i class="fas fa-file-pdf me-2 text-danger"></i>
                                                Yüklenen PDF
                                            </h5>
                                        </div>

                                        <!-- File Info -->
                                        <div class="file-info">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <p><strong>Dosya Adı:</strong> <span id="fileName"></span></p>
                                                    <p><strong>Dosya Boyutu:</strong> <span id="fileSize"></span></p>
                                                </div>
                                                <div class="col-md-6">
                                                    <p><strong>Sayfa Sayısı:</strong> <span id="pageCount">-</span></p>
                                                    <p><strong>Durum:</strong> <span class="badge bg-success">Hazır</span></p>
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="text-center">
                                            <button class="btn btn-extract btn-lg px-4" id="extractBtn">
                                                <i class="fas fa-magic me-2"></i>
                                                Resimleri Çıkar
                                            </button>
                                            <button class="btn btn-outline-secondary ms-2" id="resetBtn">
                                                <i class="fas fa-redo me-2"></i>
                                                Yeni PDF Yükle
                                            </button>
                                        </div>
                                    </div>

                                    <!-- Extracted Images -->
                                    <div id="extractedImages" style="display: none;">
                                        <hr>
                                        <div class="d-flex justify-content-between align-items-center mb-3">
                                            <h5 class="mb-0">
                                                <i class="fas fa-images me-2"></i>
                                                Çıkarılan Resimler (<span id="imageCount">0</span>)
                                            </h5>
                                            <button type="button" class="btn btn-success" id="downloadAllBtn">
                                                <i class="fas fa-file-archive me-2"></i>
                                                ZIP Olarak İndir
                                            </button>
                                        </div>
                                        <div id="imagesGrid" class="images-grid"></div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <!-- content -->

            <!-- Footer Start -->
            <%- include("../partials/footer") %>
            <!-- end Footer -->

        </div>

        <!-- ============================================================== -->
        <!-- End Page content -->
        <!-- ============================================================== -->

    </div>
    <!-- END wrapper -->

    <%- include("../partials/scripts") %>

    <!-- PDF.js ve JSZip -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js"></script>
    <script src="https://unpkg.com/pdf-lib@1.17.1/dist/pdf-lib.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>

    <script>
        // PDF.js worker ayarı
        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js';

        let selectedFile = null;
        let extractedImages = [];
        let pdfDocument = null;

        // DOM elementleri
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const selectFiles = document.getElementById('selectFiles');
        const pdfInfo = document.getElementById('pdfInfo');
        const fileName = document.getElementById('fileName');
        const fileSize = document.getElementById('fileSize');
        const pageCount = document.getElementById('pageCount');
        const extractBtn = document.getElementById('extractBtn');
        const resetBtn = document.getElementById('resetBtn');
        const progressContainer = document.getElementById('progressContainer');
        const progressBar = document.getElementById('progressBar');
        const progressText = document.getElementById('progressText');
        const progressDetail = document.getElementById('progressDetail');
        const extractedImagesDiv = document.getElementById('extractedImages');
        const downloadAllBtn = document.getElementById('downloadAllBtn');
        const imageCount = document.getElementById('imageCount');
        const imagesGrid = document.getElementById('imagesGrid');

        // Event listeners
        selectFiles.addEventListener('click', () => fileInput.click());
        fileInput.addEventListener('change', handleFiles);
        extractBtn.addEventListener('click', extractImages);
        resetBtn.addEventListener('click', resetForm);
        downloadAllBtn.addEventListener('click', downloadAllImages);

        // Drag & Drop
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.classList.add('dragover');
        });

        uploadArea.addEventListener('dragleave', (e) => {
            if (!uploadArea.contains(e.relatedTarget)) {
                uploadArea.classList.remove('dragover');
            }
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
            const files = Array.from(e.dataTransfer.files).filter(file => file.type === 'application/pdf');
            if (files.length > 0) {
                handleFile(files[0]);
            } else {
                alert('Lütfen sadece PDF dosyaları seçin.');
            }
        });

        function handleFiles(e) {
            const file = e.target.files[0];
            if (file) {
                handleFile(file);
            }
        }

        async function handleFile(file) {
            if (file.type !== 'application/pdf') {
                alert('Lütfen sadece PDF dosyası seçin.');
                return;
            }

            if (file.size > 50 * 1024 * 1024) {
                alert('Dosya boyutu 50MB\'dan küçük olmalıdır.');
                return;
            }

            try {
                selectedFile = file;
                
                progressContainer.style.display = 'block';
                updateProgress(20, 'PDF yükleniyor...', 'Dosya okunuyor...');

                // PDF'i yükle
                const arrayBuffer = await file.arrayBuffer();
                pdfDocument = await pdfjsLib.getDocument(arrayBuffer).promise;

                updateProgress(100, 'PDF yüklendi!', 'Hazır');

                fileName.textContent = file.name;
                fileSize.textContent = formatFileSize(file.size);
                pageCount.textContent = pdfDocument.numPages + ' sayfa';

                setTimeout(() => {
                    progressContainer.style.display = 'none';
                    uploadArea.style.display = 'none';
                    pdfInfo.style.display = 'block';
                }, 1000);

            } catch (error) {
                console.error('PDF yükleme hatası:', error);
                alert('PDF dosyası yüklenirken hata oluştu.');
                progressContainer.style.display = 'none';
            }
        }

        async function extractImages() {
            if (!selectedFile || !pdfDocument) return;

            extractBtn.disabled = true;
            extractBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Çıkarılıyor...';
            
            progressContainer.style.display = 'block';
            extractedImages = [];
            imagesGrid.innerHTML = '';

            try {
                updateProgress(10, 'Resimler aranıyor...', 'PDF sayfaları taranıyor...');

                const arrayBuffer = await selectedFile.arrayBuffer();
                const pdfDoc = await PDFLib.PDFDocument.load(arrayBuffer);
                
                let imageIndex = 0;
                const totalPages = pdfDocument.numPages;

                for (let pageNum = 1; pageNum <= totalPages; pageNum++) {
                    const progressPercent = 10 + (pageNum / totalPages * 80);
                    updateProgress(progressPercent, `Sayfa ${pageNum}/${totalPages} taranıyor...`, 'Resimler çıkarılıyor...');

                    const page = await pdfDocument.getPage(pageNum);
                    
                    // PDF.js ile sayfa render et
                    const viewport = page.getViewport({ scale: 1.5 });
                    const canvas = document.createElement('canvas');
                    const context = canvas.getContext('2d');
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;

                    await page.render({
                        canvasContext: context,
                        viewport: viewport
                    }).promise;

                    // Canvas'ı resim olarak kaydet
                    canvas.toBlob((blob) => {
                        if (blob && blob.size > 1000) { // Minimum boyut kontrolü
                            const imageInfo = {
                                name: `sayfa_${pageNum}_resim_${imageIndex + 1}.png`,
                                blob: blob,
                                url: URL.createObjectURL(blob),
                                size: blob.size,
                                page: pageNum
                            };
                            
                            extractedImages.push(imageInfo);
                            addImageToGrid(imageInfo);
                            imageIndex++;
                            
                            imageCount.textContent = extractedImages.length;
                        }
                    }, 'image/png', 0.9);

                    // Kısa bekleme
                    await new Promise(resolve => setTimeout(resolve, 100));
                }

                updateProgress(100, 'Tamamlandı!', `${extractedImages.length} resim çıkarıldı`);

                setTimeout(() => {
                    progressContainer.style.display = 'none';
                    if (extractedImages.length > 0) {
                        extractedImagesDiv.style.display = 'block';
                    } else {
                        alert('PDF dosyasında çıkarılabilir resim bulunamadı.');
                    }
                }, 1500);

            } catch (error) {
                console.error('Resim çıkarma hatası:', error);
                alert('Resimler çıkarılırken bir hata oluştu.');
                progressContainer.style.display = 'none';
            }

            extractBtn.disabled = false;
            extractBtn.innerHTML = '<i class="fas fa-magic me-2"></i>Resimleri Çıkar';
        }

        function addImageToGrid(imageInfo) {
            const imageItem = document.createElement('div');
            imageItem.className = 'image-item';
            
            imageItem.innerHTML = `
                <img src="${imageInfo.url}" alt="${imageInfo.name}" class="image-preview">
                <div class="mt-2">
                    <h6 class="mb-1">${imageInfo.name}</h6>
                    <small class="text-muted">Sayfa ${imageInfo.page} - ${formatFileSize(imageInfo.size)}</small>
                    <div class="mt-2">
                        <button type="button" class="btn btn-sm btn-primary" onclick="downloadImage('${imageInfo.url}', '${imageInfo.name}')">
                            <i class="fas fa-download me-1"></i>İndir
                        </button>
                    </div>
                </div>
            `;
            
            imagesGrid.appendChild(imageItem);
        }

        function downloadImage(url, name) {
            const link = document.createElement('a');
            link.href = url;
            link.download = name;
            link.style.display = 'none';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        async function downloadAllImages() {
            if (extractedImages.length === 0) return;

            downloadAllBtn.disabled = true;
            downloadAllBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Hazırlanıyor...';

            try {
                const zip = new JSZip();
                
                for (const imageInfo of extractedImages) {
                    zip.file(imageInfo.name, imageInfo.blob);
                }

                const zipBlob = await zip.generateAsync({ type: 'blob' });
                const url = URL.createObjectURL(zipBlob);
                
                const link = document.createElement('a');
                link.href = url;
                link.download = `pdf_resimleri_${new Date().getTime()}.zip`;
                link.style.display = 'none';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
                
                URL.revokeObjectURL(url);

            } catch (error) {
                console.error('ZIP oluşturma hatası:', error);
                alert('ZIP dosyası oluşturulurken hata oluştu.');
            }

            downloadAllBtn.disabled = false;
            downloadAllBtn.innerHTML = '<i class="fas fa-file-archive me-2"></i>ZIP Olarak İndir';
        }

        function updateProgress(percent, text, detail) {
            progressBar.style.width = percent + '%';
            progressText.textContent = text;
            progressDetail.textContent = detail;
        }

        function resetForm() {
            selectedFile = null;
            pdfDocument = null;
            extractedImages = [];
            fileInput.value = '';

            uploadArea.style.display = 'block';
            pdfInfo.style.display = 'none';
            extractedImagesDiv.style.display = 'none';
            progressContainer.style.display = 'none';
            imagesGrid.innerHTML = '';
        }

        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }
    </script>

</body>
</html>
